version: '3.6'
services:

  # PostgreSQL database
  postgres:
    image: postgres:12
    container_name: "caerus-postgres"
    ports:
      - "6432:5432"
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database/schema/:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_DB: caerus

      # TODO: Set your PostgreSQL username and password
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password

  ## Caerus Server
  server:
    build: .
    container_name: "caerus-server"
    user: "${UID}:${GID}"
    ports:
      - "3000:3000"
    depends_on:
      - "postgres"
    restart: always
    volumes:
      # Folder where the uploaded files will be stored
      # TODO: Set your custom path here
      - ${HOME}/.caerus/:/files
    environment:

      ########################################
      ### Database
      ########################################

      # Database URL where the Skimmer data are stored
      # TODO: Set your custom username and password. Leave everything else as it is
      DATABASE_URI: postgres://username:password@postgres:5432/caerus?sslmode=disable

      ########################################
      ### File storage
      ########################################

      # Base folder where the temporary files will be stored
      # Note: This should be a mounted volume for safety
      FILE_STORAGE_BASE_FOLDER: "/files"

      ########################################
      ### Chain information
      ########################################

      # Information used to generate the wallet that will be used to sign transactions
      # TODO: Update the account derivation path and recovery phrase as needed
      CHAIN_ACCOUNT_DERIVATION_PATH: "m/44'/852'/0'/0/0"
      CHAIN_ACCOUNT_RECOVERY_PHRASE: ""

      # URLs to connect to the various chain endpoints
      CHAIN_RPC_URL: "https://rpc.morpheus.desmos.network:443"
      CHAIN_GRPC_URL: "https://grpc.morpheus.desmos.network:443"

      # Gas price of the chain that will be used when broadcasting transactions
      CHAIN_GAS_PRICE: "0.01udaric"

      ########################################
      ### Notifications
      ########################################

      # Path to the Firebase credentials file that will be used to send notifications
      # TODO: Set your path here - Make sure it's a mounted volume
      FIREBASE_CREDENTIALS_FILE_PATH: ""

      ########################################
      ### Deep links
      ########################################

      ## Branch.io SDK key that will be used in order to create deep links
      BRANCH_KEY: ""

      ########################################
      ### Analytics
      ########################################

      # Whether the analytics should be enabled
      ANALYTICS_ENABLED: "false"

      # API key used in order to connect to the PostHog instance
      # TODO: Set your custom API key here
      ANALYTICS_POSTHOG_API_KEY: ""

      # The PostHog instance to use for analytics
      ANALYTICS_POSTHOG_HOST: ""

      ########################################
      ### Logging
      ########################################

      # Log level of the whole application
      LOG_LEVEL: "debug"

  ## Hasura GraphQL
  graphql-engine:
    image: hasura/graphql-engine:v2.25.1
    container_name: "caerus-graphql"
    ports:
      - "8080:8080"
    depends_on:
      - "server"
      - "postgres"
    restart: always
    extra_hosts:
      # This is required for the Authentication API to work properly.
      # If your APIs are hosted on an externally-reachable server, you can remove this
      - "host.docker.internal:host-gateway"
    environment:
      # Metadata folder to auto-apply them on start
      HASURA_GRAPHQL_METADATA_DIR: ./hasura

      # PostgreSQL database used to store Skimmer data
      # TODO: Set your username and password. Leave everything else as it is
      HASURA_GRAPHQL_DATABASE_URL: postgres://username:password@postgres:5432/caerus

      # PostgreSQL database used to store Desmos data
      # TODO: Set your custom URL
      HASURA_GRAPHQL_DESMOS_DATABASE_URL: postgresql://username:password@host:5432/djuno

      # Hasura Actions base URL
      # TODO: Set your custom URL
      HASURA_ACTION_BASE_URL: http://host.docker.internal:3000

      # Authentication APIs
      # TODO: Set your custom URL
      HASURA_GRAPHQL_AUTH_HOOK: http://host.docker.internal:3000/hasura-session
      HASURA_GRAPHQL_AUTH_HOOK_MODE: GET

      # Enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"

      # Console admin secret
      # TODO: Set your custom password
      HASURA_GRAPHQL_ADMIN_SECRET: password

      # Enable debugging mode.
      # It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"

volumes:
  db_data:
