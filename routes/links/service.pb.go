// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: caerus/links/v1/service.proto

package links

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	types "github.com/desmos-labs/caerus/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CreateLinkRequest struct {
	// The configuration of the link to be created
	LinkConfiguration *types.LinkConfig `protobuf:"bytes,1,opt,name=link_configuration,json=linkConfiguration,proto3" json:"link_configuration,omitempty"`
	// (optional) API key used to create the link.
	// If not specified, the default key of the server will be used instead.
	ApiKey string `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (m *CreateLinkRequest) Reset()         { *m = CreateLinkRequest{} }
func (m *CreateLinkRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLinkRequest) ProtoMessage()    {}
func (*CreateLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c64ad94c2176b16, []int{0}
}
func (m *CreateLinkRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateLinkRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLinkRequest.Merge(m, src)
}
func (m *CreateLinkRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLinkRequest proto.InternalMessageInfo

func (m *CreateLinkRequest) GetLinkConfiguration() *types.LinkConfig {
	if m != nil {
		return m.LinkConfiguration
	}
	return nil
}

func (m *CreateLinkRequest) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

type CreateLinkResponse struct {
	// URL of the generated link
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (m *CreateLinkResponse) Reset()         { *m = CreateLinkResponse{} }
func (m *CreateLinkResponse) String() string { return proto.CompactTextString(m) }
func (*CreateLinkResponse) ProtoMessage()    {}
func (*CreateLinkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c64ad94c2176b16, []int{1}
}
func (m *CreateLinkResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateLinkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateLinkResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateLinkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLinkResponse.Merge(m, src)
}
func (m *CreateLinkResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateLinkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLinkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLinkResponse proto.InternalMessageInfo

func (m *CreateLinkResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateLinkRequest)(nil), "caerus.links.v1.CreateLinkRequest")
	proto.RegisterType((*CreateLinkResponse)(nil), "caerus.links.v1.CreateLinkResponse")
}

func init() { proto.RegisterFile("caerus/links/v1/service.proto", fileDescriptor_0c64ad94c2176b16) }

var fileDescriptor_0c64ad94c2176b16 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x3b, 0x0a, 0x95, 0x8e, 0x82, 0x76, 0x36, 0x96, 0x16, 0x87, 0x12, 0x41, 0x8a, 0xe0,
	0x84, 0xd4, 0x37, 0xb0, 0xae, 0xd4, 0x55, 0xc4, 0x8d, 0x9b, 0x32, 0x89, 0xd7, 0x3a, 0x24, 0xcd,
	0xc4, 0xf9, 0x09, 0xe6, 0x2d, 0x7c, 0x2c, 0x97, 0x5d, 0xba, 0x94, 0xe4, 0x45, 0x24, 0x93, 0xa0,
	0xa2, 0xe0, 0xee, 0xc2, 0xf9, 0xce, 0x3d, 0x9c, 0x7b, 0xf1, 0x51, 0xcc, 0x41, 0x59, 0xed, 0xa7,
	0x22, 0x4b, 0xb4, 0x5f, 0x04, 0xbe, 0x06, 0x55, 0x88, 0x18, 0x58, 0xae, 0xa4, 0x91, 0x64, 0xbf,
	0x95, 0x99, 0x93, 0x59, 0x11, 0x8c, 0x27, 0x1d, 0x6f, 0xca, 0x1c, 0x1c, 0xdf, 0x2a, 0x8e, 0xf6,
	0x5e, 0xf0, 0x70, 0xa1, 0x80, 0x1b, 0xb8, 0x11, 0x59, 0x12, 0xc2, 0xb3, 0x05, 0x6d, 0xc8, 0x15,
	0x26, 0x0d, 0xb3, 0x8c, 0x65, 0xf6, 0x28, 0x56, 0x56, 0x71, 0x23, 0x64, 0x36, 0x42, 0x53, 0x34,
	0xdb, 0x9d, 0x4f, 0x58, 0xb7, 0xdf, 0xad, 0x63, 0x45, 0xc0, 0x1a, 0xe7, 0xc2, 0x91, 0xe1, 0x30,
	0xfd, 0x9a, 0x3b, 0x17, 0x39, 0xc4, 0x3b, 0x3c, 0x17, 0xcb, 0x04, 0xca, 0xd1, 0xd6, 0x14, 0xcd,
	0x06, 0x61, 0x9f, 0xe7, 0xe2, 0x1a, 0x4a, 0xef, 0x04, 0x93, 0x9f, 0xc9, 0x3a, 0x97, 0x99, 0x06,
	0x72, 0x80, 0xb7, 0xad, 0x4a, 0x5d, 0xd6, 0x20, 0x6c, 0xc6, 0x39, 0xe0, 0xbd, 0x86, 0xd0, 0xb7,
	0x6d, 0x4b, 0x72, 0x87, 0xf1, 0xb7, 0x8f, 0x78, 0xec, 0x57, 0x5d, 0xf6, 0xa7, 0xce, 0xf8, 0xf8,
	0x5f, 0xa6, 0x0d, 0xbe, 0xb8, 0x7c, 0xab, 0x28, 0xda, 0x54, 0x14, 0x7d, 0x54, 0x14, 0xbd, 0xd6,
	0xb4, 0xb7, 0xa9, 0x69, 0xef, 0xbd, 0xa6, 0xbd, 0xfb, 0xd3, 0x95, 0x30, 0x4f, 0x36, 0x62, 0xb1,
	0x5c, 0xfb, 0x0f, 0xa0, 0xd7, 0x52, 0x9f, 0xa5, 0x3c, 0xd2, 0x7e, 0x77, 0x56, 0x25, 0xad, 0x81,
	0xee, 0x1b, 0x51, 0xdf, 0x5d, 0xf5, 0xfc, 0x33, 0x00, 0x00, 0xff, 0xff, 0x15, 0x0a, 0xc2, 0x50,
	0xa4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LinksServiceClient is the client API for LinksService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LinksServiceClient interface {
	// CreateLink allows to generated a new deep link based on the given configuration
	CreateLink(ctx context.Context, in *CreateLinkRequest, opts ...grpc.CallOption) (*CreateLinkResponse, error)
}

type linksServiceClient struct {
	cc grpc1.ClientConn
}

func NewLinksServiceClient(cc grpc1.ClientConn) LinksServiceClient {
	return &linksServiceClient{cc}
}

func (c *linksServiceClient) CreateLink(ctx context.Context, in *CreateLinkRequest, opts ...grpc.CallOption) (*CreateLinkResponse, error) {
	out := new(CreateLinkResponse)
	err := c.cc.Invoke(ctx, "/caerus.links.v1.LinksService/CreateLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LinksServiceServer is the server API for LinksService service.
type LinksServiceServer interface {
	// CreateLink allows to generated a new deep link based on the given configuration
	CreateLink(context.Context, *CreateLinkRequest) (*CreateLinkResponse, error)
}

// UnimplementedLinksServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLinksServiceServer struct {
}

func (*UnimplementedLinksServiceServer) CreateLink(ctx context.Context, req *CreateLinkRequest) (*CreateLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLink not implemented")
}

func RegisterLinksServiceServer(s grpc1.Server, srv LinksServiceServer) {
	s.RegisterService(&_LinksService_serviceDesc, srv)
}

func _LinksService_CreateLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinksServiceServer).CreateLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/caerus.links.v1.LinksService/CreateLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinksServiceServer).CreateLink(ctx, req.(*CreateLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LinksService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "caerus.links.v1.LinksService",
	HandlerType: (*LinksServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLink",
			Handler:    _LinksService_CreateLink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "caerus/links/v1/service.proto",
}

func (m *CreateLinkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateLinkRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateLinkRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ApiKey) > 0 {
		i -= len(m.ApiKey)
		copy(dAtA[i:], m.ApiKey)
		i = encodeVarintService(dAtA, i, uint64(len(m.ApiKey)))
		i--
		dAtA[i] = 0x12
	}
	if m.LinkConfiguration != nil {
		{
			size, err := m.LinkConfiguration.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateLinkResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateLinkResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateLinkResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintService(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintService(dAtA []byte, offset int, v uint64) int {
	offset -= sovService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreateLinkRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LinkConfiguration != nil {
		l = m.LinkConfiguration.Size()
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.ApiKey)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	return n
}

func (m *CreateLinkResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	return n
}

func sovService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozService(x uint64) (n int) {
	return sovService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreateLinkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateLinkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateLinkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkConfiguration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LinkConfiguration == nil {
				m.LinkConfiguration = &types.LinkConfig{}
			}
			if err := m.LinkConfiguration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateLinkResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateLinkResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateLinkResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupService = fmt.Errorf("proto: unexpected end of group")
)
